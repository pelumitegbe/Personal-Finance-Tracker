// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: transactions.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const addTransactions = `-- name: AddTransactions :one
INSERT INTO transactions (
  id,amount,transaction_type,description,category,transaction_date,created_at, updated_at
) VALUES ( $1,$2,$3,$4, $5,$6,$7,$8)
RETURNING id, amount, description, category, transaction_type, transaction_date, created_at, updated_at
`

type AddTransactionsParams struct {
	ID              uuid.UUID
	Amount          int64
	TransactionType string
	Description     sql.NullString
	Category        sql.NullString
	TransactionDate time.Time
	CreatedAt       time.Time
	UpdatedAt       time.Time
}

func (q *Queries) AddTransactions(ctx context.Context, arg AddTransactionsParams) (Transaction, error) {
	row := q.db.QueryRowContext(ctx, addTransactions,
		arg.ID,
		arg.Amount,
		arg.TransactionType,
		arg.Description,
		arg.Category,
		arg.TransactionDate,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i Transaction
	err := row.Scan(
		&i.ID,
		&i.Amount,
		&i.Description,
		&i.Category,
		&i.TransactionType,
		&i.TransactionDate,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
